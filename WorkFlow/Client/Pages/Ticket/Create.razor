@page "/{Company}/project/{project}/ticket/create"
@inject WorkFlow.Shared.Interfaces.ITicket TicketService
@inject IUser UserService

<div class="flex flex-grow flex-col bg-gray-100 p-5 md:w-4/5 xl:w-2/5 m-auto mt-20">
    <h1 class="text-2xl text-center">Create a new ticket</h1>
    <EditForm Model="@_ticket" OnValidSubmit="@HandleValidSubmit">
        <div class="mb-2">
            <label for="name" class="text-grey-darker inline-block mb-2">Name</label>
            <input @bind="_ticket.Name" type="text" id="name" name="name" class="border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" placeholder="Ticket Name" required/>
        </div>
        <div class="mb-2">
            <label for="description" class="text-grey-darker inline-block mb-2">Description</label>
            <textarea @bind="_ticket.Description" id="description" name="description" class="border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" placeholder="Ticket description" required></textarea>
        </div>
        <div class="mb-2">
            <label for="priority" class="text-grey-darker inline-block mb-2">Priority</label>
            <InputSelect @bind-Value="_ticket.Priority" id="priority" class="border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 bg-white" name="priority" required>
                <option value="HIGH">
                    High
                </option>
                <option value="MEDIUM">
                    Medium
                </option>
                <option value="LOW">
                    Low
                </option>
            </InputSelect>
        </div>
        <div class="mb-2">
            <label for="assignee" class="text-grey-darker inline-block mb-2">Assignee</label>
            <select @onchange="OnAssigneeChanged" id="assignee" class="border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 bg-white" name="assignee" required>
                <option value="">Select User</option>
                @foreach (var user in _users)
                {
                    <option value="@user.Id">@(user.Name ?? user.UserName)</option>
                }
            </select>
        </div>
        <div class="flex flex-row justify-between mb-2">
            <div class="w-full mr-3">
                <label for="due-date" class="text-grey-darker inline-block mb-2">Due Date</label>
                <input @bind="_ticket.DueDate" type="text" id="due-date" name="due-date" class="border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full m-0 p-2.5" placeholder="31/10/2021 13:45" required/>
            </div>
            <div class="w-full ml-3">
                <label for="eta" class="text-grey-darker inline-block mb-2">Estimated time</label>
                <input @bind="_ticket.EstimatedTime" type="text" id="eta" name="eta" class="border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full m-0 p-2.5" placeholder="15 hours" required/>
            </div>
        </div>
        <button type="submit" class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 w-full">Submit</button>
    </EditForm>
</div>

@code {

    [Parameter]
    public String Company { get; set; }

    [Parameter]
    public String Project { get; set; }

    private TicketDto _ticket = new();

    private List<UserDto> _users = new();

    protected override async Task OnInitializedAsync()
    {
        _users = await UserService.GetUsersByProject(Project);
    }

    private void OnAssigneeChanged(ChangeEventArgs e)
    {
        foreach (var user in _users.Where(user => (string?) e.Value == user.Id))
        {
            _ticket.Assignee = user;
            return;
        }
    }

    private async void HandleValidSubmit()
    {
        _ticket.ProjectUri = Project;
        var ticket = await TicketService.CreateTicket(_ticket);
        Console.WriteLine($"Ticket Created: {ticket.Name}, {ticket.Description}, {ticket.Priority}, {ticket.Assignee.Name}, {ticket.DueDate}, {ticket.EstimatedTime}");
    }

}